{"version":3,"sources":["Navbar.js","Line.js","Plateau.js","Controls.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","href","Line","selected","line","Plateau","lines","game","map","element","index","key","currentLine","Controls","onClick","colorize","undo","submit","Modal","showModal","message","closeModal","App","state","isWin","currentCase","combinationToFind","generateCombination","change","bind","compare","color","gameBis","this","push","setState","pop","result","console","log","combination","good","bad","length","includes","indexOf","window","location","reload","i","random","Math","floor","React","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2227b40a.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Navbar(props) {\nreturn (\n    <header>\n        <div className=\"logo\"><a href=\"#\">MasterMind</a> </div>\n        <nav>\n            <ul>\n                <li><a href=\"#\">Score</a></li>\n                <li><a href=\"#\">Regles</a></li>\n            </ul>\n        </nav>\n    </header>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\n\nfunction Line(props) {\nreturn (\n    <div className={\"line \" + (props.selected ? 'bg-gray': \"\")}>\n        <div className=\"combination\">\n            <div className={\"case-combination \" + (props.line[0][0] ? props.line[0][0] : \"\")}></div>\n            <div className={\"case-combination \" + (props.line[0][1] ? props.line[0][1] : \"\")}></div>\n            <div className={\"case-combination \" + (props.line[0][2] ? props.line[0][2] : \"\")}></div>\n            <div className={\"case-combination \" + (props.line[0][3] ? props.line[0][3] : \"\")}></div>\n        </div>\n        <div className=\"result\">\n            <div className={\"case-result \" + (props.line[1][0] ? props.line[1][0] : \"\")}></div>\n            <div className={\"case-result \" + (props.line[1][1] ? props.line[1][1] : \"\")}></div>\n            <div className={\"case-result \" + (props.line[1][2] ? props.line[1][2] : \"\")}></div>\n            <div className={\"case-result \" + (props.line[1][3] ? props.line[1][3] : \"\")}></div>\n        </div>\n    </div>\n    );\n}\n\nexport default Line;\n","import React from 'react';\nimport Line from \"./Line\";\n\n\nfunction Plateau(props) {\n    const lines = props.game.map((element,index) => \n        <Line key={index} line={element} selected={props.currentLine == index}></Line>\n    )\nreturn (\n    <div className=\"plateau\">\n        {lines}\n    </div>\n    );\n}\n\nexport default Plateau;\n","import React from 'react';\n\nfunction Controls(props) {\n    return (\n        <div className=\"control\">\n            <div className=\"combination\">\n                <div className=\"color red\" onClick={() => props.colorize('red')}></div>\n                <div className=\"color green\" onClick={() => props.colorize('green')}></div>\n                <div className=\"color orange\" onClick={() => props.colorize('orange')}></div>\n                <div className=\"color yellow\" onClick={() => props.colorize('yellow')}></div>\n                <div className=\"color purple\" onClick={() => props.colorize('purple')}></div>\n                <div className=\"color blue\" onClick={() => props.colorize('blue')}></div>\n            </div>\n            <div className=\"action\">\n                <button onClick={props.undo} >undo</button>\n                <button onClick={props.submit}>submit</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Controls;\n","import React from 'react';\n\nfunction Modal(props) {\n    return (\n        <div className={\"modal \" + props.showModal}>\n            <div className=\"modalcontent\">\n            <p>{props.message}</p>\n            <span onClick={props.closeModal}>x</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./Navbar\";\nimport Plateau from \"./Plateau\";\nimport Controls from './Controls';\nimport Modal from \"./Modal\";\nimport { throwStatement } from '@babel/types';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isWin : \"loose\",\n      currentLine: 0,\n      currentCase: 0,\n      showModal: 'hidden',\n      message: '',\n      combinationToFind:this.generateCombination(),\n      game:[\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      ]\n    }\n    this.change = this.change.bind(this)\n    this.undo = this.undo.bind(this)\n    this.compare = this.compare.bind(this)\n    this.submit = this.submit.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.generateCombination = this.generateCombination.bind(this)\n  }\n\nchange(color) {\n    const gameBis = [...this.state.game]\n    if (this.state.currentCase < 4) {\n        gameBis[this.state.currentLine][0].push(color)\n        \n        this.setState(state => ({\n        game: gameBis,\n        currentCase: state.currentCase + 1\n        }))\n    }\n}\n\nundo(){\n  const gameBis = [...this.state.game]\n  if (this.state.currentCase > 0) {\n    gameBis[this.state.currentLine][0].pop()\n    this.setState(state => ({\n      game: gameBis,\n      currentCase: state.currentCase -1\n    }))\n  }\n}\n\nsubmit(){\n  let gameBis = [...this.state.game]\n  if (this.state.currentCase == 4) {\n    let result = this.compare()\n    console.log(result);\n    for (let index = 0; index < result[0]; index++) {\n      gameBis[this.state.currentLine][1].push('black')\n    }\n    for (let index = 0; index < result[1]; index++) {\n      gameBis[this.state.currentLine][1].push('gray')\n    }\n    this.setState(state => ({\n      game:gameBis,\n      currentLine: state.currentLine + 1,\n      currentCase: 0\n    }))\n\n    if (result[0] == 4) {\n      this.setState(state => ({\n        showModal: \"show\",\n        message: \"gagné\"\n      }))\n    }\n    if (this.state.currentLine == 9 && result[0] != 4) {\n      this.setState(state => ({\n        showModal: \"show\",\n        message: \"perdu\"\n      }))\n    }\n  }\n}\n\ncompare(){\n  let combination = [...this.state.game[this.state.currentLine][0]]\n  let combinationToFind = [...this.state.combinationToFind]\n  let good = 0;\n  let bad = 0;\n  for (let index = 0; index < combination.length; index++) {\n    if (combination [index] == combinationToFind[index]) {\n      good++;\n      combinationToFind[index] = 'x'\n      combination[index] = 'a'\n    }\n  }\n  for (let index = 0; index < combinationToFind.length; index++) {\n    if (combinationToFind.includes(combination[index])) {\n      bad ++\n      combinationToFind[combinationToFind.indexOf(combination[index])] ='x'\n      combination[index] ='a'\n    }\n  }\n  return[good, bad]\n}\n\ncloseModal(){\n  this.setState({\n    showModal:\"hidden\",\n    game:[\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      [[],[]],\n      ],\n      currentLine: 0,\n      currentCase: 0\n  })\n  window.location.reload();\n}\n\n\ngenerateCombination(){\n  let combination = []\n  for (let i = 0; i < 4; i++) {\n    let random = Math.floor(Math.random() * 6)\n    let colors = [\"red\",\"blue\",\"yellow\",\"orange\",\"purple\",\"green\"]\n    combination.push(colors[random])\n  }\n  return combination\n}\n\n  render(){\n    return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <main>\n        <Plateau game={this.state.game} currentLine={this.state.currentLine}> </Plateau>\n        <Controls colorize={this.change} undo={this.undo} submit={this.submit}>\n        </Controls>\n        <Modal message={this.state.message} showModal={this.state.showModal} closeModal={this.closeModal}></Modal>\n      </main>\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}